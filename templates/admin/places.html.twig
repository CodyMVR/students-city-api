{% extends 'layouts/with_navbar.html.twig' %}

{% block title %}Gestion des établissements{% endblock %}

{% block main_content %}
<div class="container">
    <h1 class="h4 mt-3 mb-3">Gestion des établissements</h1>
    
    <div id="flash-messages"></div>

    {% if not is_granted('ROLE_ADMIN') %}
        <div class="alert alert-warning">
            Vous devez être administrateur pour gérer les établissements.
        </div>
    {% else %}
        <div class="card shadow">
            <div class="card-body p-0">
                <table class="table table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>ID</th>
                            <th>Nom</th>
                            <th>Adresse</th>
                            <th>Type</th>
                            <th>Statut</th>
                            <th>Date de création</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                    {% for place in places %}
                        <tr id="place-{{ place.id }}">
                            <td>{{ place.id }}</td>
                            <td>{{ place.name }}</td>
                            <td>{{ place.adresse }}</td>
                            <td>{{ place.type }}</td>
                            <td>
                                <span class="status badge {% if place.statut == 'validé' %}bg-success{% elseif place.statut == 'en attente' %}bg-warning text-dark{% else %}bg-secondary{% endif %}">
                                    {{ place.statut }}
                                </span>
                            </td>
                            <td>{{ place.createAt ? place.createAt|date('d/m/Y') : '' }}</td>
                            <td>
                                <div class="btn-group">
                                    {% if place.statut != 'validé' %}
                                        <button onclick="validatePlace({{ place.id }})" class="btn btn-sm btn-success">
                                            <i class="fas fa-check"></i> Approuver
                                        </button>
                                    {% endif %}
                                    {% if place.statut != 'en attente' %}
                                        <button onclick="revokePlace({{ place.id }})" class="btn btn-sm btn-danger">
                                            <i class="fas fa-times"></i> Révoquer
                                        </button>
                                    {% endif %}
                                </div>
                            </td>
                        </tr>
                    {% else %}
                        <tr>
                            <td colspan="7" class="text-center text-muted">Aucun établissement trouvé.</td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>
    {% endif %}
</div>

<script>
function showFlashMessage(message, type = 'success') {
    const flashDiv = document.getElementById('flash-messages');
    const alert = document.createElement('div');
    alert.className = `alert alert-${type} alert-dismissible fade show`;
    alert.innerHTML = `
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    `;
    flashDiv.appendChild(alert);
    setTimeout(() => alert.remove(), 5000);
}

function updatePlaceRow(placeId, status) {
    const row = document.getElementById(`place-${placeId}`);
    const statusBadge = row.querySelector('.status');
    const actionsCell = row.querySelector('td:last-child');

    // Mettre à jour le statut
    statusBadge.className = `status badge ${status === 'validé' ? 'bg-success' : 'bg-warning text-dark'}`;
    statusBadge.textContent = status;

    // Mettre à jour les boutons d'action
    let buttonsHtml = '<div class="btn-group">';
    if (status !== 'validé') {
        buttonsHtml += `<button onclick="validatePlace(${placeId})" class="btn btn-sm btn-success">
            <i class="fas fa-check"></i> Approuver
        </button>`;
    }
    if (status !== 'en attente') {
        buttonsHtml += `<button onclick="revokePlace(${placeId})" class="btn btn-sm btn-danger">
            <i class="fas fa-times"></i> Révoquer
        </button>`;
    }
    buttonsHtml += '</div>';
    actionsCell.innerHTML = buttonsHtml;
}

async function validatePlace(placeId) {
    try {
        const response = await fetch(`/api/admin/places/${placeId}/approve`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${localStorage.getItem('jwt_token')}`
            }
        });

        const data = await response.json();
        
        if (response.ok) {
            updatePlaceRow(placeId, 'validé');
            showFlashMessage('Établissement validé avec succès');
        } else {
            throw new Error(data.message || 'Erreur lors de la validation');
        }
    } catch (error) {
        console.error('Erreur:', error);
        showFlashMessage(error.message, 'danger');
    }
}

async function revokePlace(placeId) {
    try {
        const response = await fetch(`/api/admin/places/${placeId}/revoke`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${localStorage.getItem('jwt_token')}`
            }
        });

        const data = await response.json();
        
        if (response.ok) {
            updatePlaceRow(placeId, 'en attente');
            showFlashMessage('Établissement révoqué avec succès');
        } else {
            throw new Error(data.message || 'Erreur lors de la révocation');
        }
    } catch (error) {
        console.error('Erreur:', error);
        showFlashMessage(error.message, 'danger');
    }
}
</script>
{% endblock %} 